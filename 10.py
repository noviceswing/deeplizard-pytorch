"""
    使用所了解到的张量知识
    覆盖神经网络中的基本张量操作
"""

# 包含的四大操作
# 1 重塑操作
# 2 元素操作
# 3 还原操作
# 4 访问操作

# 重塑操作：reshape
# 重塑操作是指改变张量的形状，但是不改变张量中元素的数量或值。
# 重塑操作可以用于改变张量的形状，以适应不同的计算需求。

# 元素操作：加、减、乘、除
# 元素操作是指对张量中的每个元素进行操作。
# 这些操作包括加、减、乘、除等。

# 还原操作：squeeze、unsqueeze
# 还原操作是指减少或增加张量的维度。
# 这些操作可以用于减少或增加张量的形状，以适应不同的计算需求。


# 访问操作：索引、切片
# 访问操作是指访问张量中的特定元素或元素子集。
# 这些操作可以用于访问张量中的特定元素或元素子集，以适应不同的计算需求。

"""
    reshape
"""

import torch
t = torch.tensor([
    [1, 1, 1, 1],
    [2, 2, 2, 2],
    [3, 3, 3, 3]
], dtype=torch.float32)
# 两种方式查看形状
print(t.size())
# 或
print(t.shape)
# 通过形状查看秩
print(len(t.shape))

# 该张量的秩为2，轴数为2，形状为3 * 4
# 第一个轴的长度为3，第二个轴长度为4

# 就重塑而言，我们会关注张量中元素的数量
print(torch.tensor(t.shape).prod())
print(torch.tensor([3, 4]).prod())
print(torch.tensor([    
    [1, 1, 1, 1],
    [2, 2, 2, 2],
    [3, 3, 3, 3]]).prod())
# 我在这里犯了一个错误?这里并没有搞清楚

# 或
print(t.numel())