# 请记住！
# 张量的形状编码了所有关于张量的相关信息:秩、轴和形状和索引
# 例:
import torch
tt = torch.tensor([
    [1, 2, 3],
    [4, 5, 6],
    [7, 8, 9]
])
shape = tt.shape
# print(shape)
# 输出为:torch.Size([3, 3])


### 下面将张量的秩、轴和形状的概念应用到实际例子中
# 将图像输入看作是 CNN 的张量输入

# CNN是卷积神经网络的缩写，是一种常用于图像识别和计算机视觉任务的深度学习模型
# CNN的输入通常是一个四维张量，形状为[batch_size, channels, height, width]
# batch_size表示输入的图像数量，channels表示图像的颜色通道数，height和width表示图像的高度和宽度
# 选择一个颜色通道,选择一个高度,选择一个宽度就可以得到特定的像素值

# 一整批图像用一个向量表示
# 例如[3, 1, 28, 28]
# 3张图像,1个颜色通道数,高和宽均为28

# CNN通过卷积层、池化层和全连接层等组件来提取图像特征，并输出预测结果

# 卷积层

# 图像经过卷积层后，张量的形状会发生变化，
# 由[batch_size, channels, height, width]
# 变为
# [batch_size, out_channels, out_height, out_width]
# out_channels表示卷积层的输出通道数，out_height和out_width表示卷积层输出的特征图的高度和宽度
# batch_size未改变
# 卷积运算会改变特征图中每个像素的值，从而提取出图像的特征信息

# 特征图是卷积神经网络中的一种数据结构，它是卷积层的输出结果，
# 也可以理解为卷积层对输入图像进行卷积操作后得到的结果。
# 特征映射和特征图是同一种概念
# 特征图中的每一个元素都代表了卷积核在输入图像上某个位置的卷积结果，
# 因此特征图可以反映出输入图像的不同特征在不同位置的强弱程度，是卷积神经网络中非常重要的中间结果。

# 在卷积神经网络中，滤波器也被称为卷积核，它是卷积层的参数之一，用于对输入图像进行卷积操作。
# 滤波器的大小和形状可以根据需要进行调整，不同的滤波器可以提取输入图像中的不同特征，
# 例如边缘、纹理、颜色等，因此滤波器的选择和设计是卷积神经网络中非常重要的一环。
